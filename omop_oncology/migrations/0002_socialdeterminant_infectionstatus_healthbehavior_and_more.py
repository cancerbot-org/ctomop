# Generated by Django 4.2.24 on 2025-09-16 12:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("omop_core", "0003_location_remove_person_location_id_and_more"),
        ("omop_oncology", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SocialDeterminant",
            fields=[
                (
                    "social_determinant_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                ("assessment_date", models.DateField()),
                ("assessment_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "determinant_category",
                    models.CharField(
                        choices=[
                            ("HOUSING", "Housing Status"),
                            ("EDUCATION", "Education"),
                            ("EMPLOYMENT", "Employment"),
                            ("INCOME", "Income/Financial"),
                            ("INSURANCE", "Insurance Coverage"),
                            ("TRANSPORTATION", "Transportation"),
                            ("SOCIAL_SUPPORT", "Social Support"),
                            ("CAREGIVER", "Caregiver Status"),
                            ("LANGUAGE", "Language/Communication"),
                            ("GEOGRAPHIC", "Geographic Exposure"),
                            ("OTHER", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "value_as_string",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("value_as_boolean", models.BooleanField(blank=True, null=True)),
                ("assessment_details", models.TextField(blank=True, null=True)),
                (
                    "risk_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("HIGH", "High Risk"),
                            ("MODERATE", "Moderate Risk"),
                            ("LOW", "Low Risk"),
                            ("NONE", "No Risk"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "determinant_concept",
                    models.ForeignKey(
                        db_column="determinant_concept_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="social_determinants",
                        to="omop_core.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.person",
                    ),
                ),
                (
                    "value_as_concept",
                    models.ForeignKey(
                        blank=True,
                        db_column="value_as_concept_id",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="social_determinant_values",
                        to="omop_core.concept",
                    ),
                ),
            ],
            options={
                "db_table": "social_determinant",
            },
        ),
        migrations.CreateModel(
            name="InfectionStatus",
            fields=[
                (
                    "infection_status_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                ("assessment_date", models.DateField()),
                ("assessment_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "infection_type",
                    models.CharField(
                        choices=[
                            ("HIV", "HIV"),
                            ("HEPATITIS_B", "Hepatitis B"),
                            ("HEPATITIS_C", "Hepatitis C"),
                            ("TB", "Tuberculosis"),
                            ("COVID_19", "COVID-19"),
                            ("OTHER_VIRAL", "Other Viral"),
                            ("BACTERIAL", "Bacterial"),
                            ("FUNGAL", "Fungal"),
                            ("OTHER", "Other"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "infection_status",
                    models.CharField(
                        choices=[
                            ("POSITIVE", "Positive"),
                            ("NEGATIVE", "Negative"),
                            ("INDETERMINATE", "Indeterminate"),
                            ("UNKNOWN", "Unknown"),
                            ("IMMUNE", "Immune/Vaccinated"),
                            ("RESOLVED", "Resolved"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "test_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "test_result_value",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "viral_load",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=15, null=True
                    ),
                ),
                (
                    "viral_load_unit",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("is_active_infection", models.BooleanField(blank=True, null=True)),
                ("treatment_required", models.BooleanField(blank=True, null=True)),
                (
                    "infection_concept",
                    models.ForeignKey(
                        db_column="infection_concept_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="infection_statuses",
                        to="omop_core.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.person",
                    ),
                ),
            ],
            options={
                "db_table": "infection_status",
            },
        ),
        migrations.CreateModel(
            name="HealthBehavior",
            fields=[
                (
                    "health_behavior_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                ("assessment_date", models.DateField()),
                ("assessment_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "behavior_type",
                    models.CharField(
                        choices=[
                            ("TOBACCO_USE", "Tobacco Use"),
                            ("ALCOHOL_USE", "Alcohol Use"),
                            ("SUBSTANCE_USE", "Substance Use"),
                            ("PHYSICAL_ACTIVITY", "Physical Activity"),
                            ("DIET", "Diet/Nutrition"),
                            ("SEXUAL_BEHAVIOR", "Sexual Behavior"),
                            ("OTHER", "Other Behavior"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "current_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CURRENT", "Current User"),
                            ("FORMER", "Former User"),
                            ("NEVER", "Never Used"),
                            ("UNKNOWN", "Unknown"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        help_text="Usage frequency",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "amount_per_day",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("amount_unit", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "duration_years",
                    models.IntegerField(
                        blank=True, help_text="Duration of use in years", null=True
                    ),
                ),
                ("quit_date", models.DateField(blank=True, null=True)),
                ("cessation_attempts", models.IntegerField(blank=True, null=True)),
                ("behavior_details", models.TextField(blank=True, null=True)),
                (
                    "behavior_concept",
                    models.ForeignKey(
                        db_column="behavior_concept_id",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="health_behaviors",
                        to="omop_core.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.person",
                    ),
                ),
            ],
            options={
                "db_table": "health_behavior",
            },
        ),
        migrations.CreateModel(
            name="TreatmentLine",
            fields=[
                (
                    "treatment_line_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "line_number",
                    models.IntegerField(
                        help_text="Treatment line number (1, 2, 3, etc.)"
                    ),
                ),
                (
                    "line_start_date",
                    models.DateField(help_text="Start date of treatment line"),
                ),
                (
                    "line_end_date",
                    models.DateField(
                        blank=True, help_text="End date of treatment line", null=True
                    ),
                ),
                (
                    "treatment_intent",
                    models.CharField(
                        choices=[
                            ("CURATIVE", "Curative"),
                            ("PALLIATIVE", "Palliative"),
                            ("ADJUVANT", "Adjuvant"),
                            ("NEOADJUVANT", "Neoadjuvant"),
                            ("MAINTENANCE", "Maintenance"),
                        ],
                        help_text="Intent of treatment",
                        max_length=30,
                    ),
                ),
                (
                    "regimen_name",
                    models.CharField(
                        blank=True,
                        help_text="Treatment regimen name",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "treatment_setting",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("INPATIENT", "Inpatient"),
                            ("OUTPATIENT", "Outpatient"),
                            ("CLINICAL_TRIAL", "Clinical Trial"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                ("is_platinum_based", models.BooleanField(default=False)),
                ("is_immunotherapy", models.BooleanField(default=False)),
                ("is_targeted_therapy", models.BooleanField(default=False)),
                ("is_hormone_therapy", models.BooleanField(default=False)),
                ("is_chemotherapy", models.BooleanField(default=False)),
                (
                    "best_response",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("CR", "Complete Response"),
                            ("PR", "Partial Response"),
                            ("SD", "Stable Disease"),
                            ("PD", "Progressive Disease"),
                            ("NE", "Not Evaluable"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "treatment_outcome",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("COMPLETED", "Completed as Planned"),
                            ("PROGRESSION", "Disease Progression"),
                            ("TOXICITY", "Unacceptable Toxicity"),
                            ("PATIENT_CHOICE", "Patient Choice"),
                            ("DEATH", "Death"),
                            ("OTHER", "Other"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "ecog_at_start",
                    models.IntegerField(
                        blank=True, help_text="ECOG PS at treatment start", null=True
                    ),
                ),
                (
                    "karnofsky_at_start",
                    models.IntegerField(
                        blank=True,
                        help_text="Karnofsky score at treatment start",
                        null=True,
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.person",
                    ),
                ),
            ],
            options={
                "db_table": "treatment_line",
                "unique_together": {("person", "line_number")},
            },
        ),
    ]
