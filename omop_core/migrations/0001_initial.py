# Generated by Django 5.2.6 on 2025-09-16 12:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CdmSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdm_source_name', models.CharField(max_length=255)),
                ('cdm_source_abbreviation', models.CharField(blank=True, max_length=25, null=True)),
                ('cdm_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('source_description', models.TextField(blank=True, null=True)),
                ('source_documentation_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('cdm_etl_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('source_release_date', models.DateField(blank=True, null=True)),
                ('cdm_release_date', models.DateField(blank=True, null=True)),
                ('cdm_version', models.CharField(blank=True, max_length=10, null=True)),
                ('cdm_version_concept_id', models.IntegerField(blank=True, null=True)),
                ('vocabulary_version', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'cdm_source',
            },
        ),
        migrations.CreateModel(
            name='Cohort',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_definition_id', models.IntegerField()),
                ('subject_id', models.IntegerField()),
                ('cohort_start_date', models.DateField()),
                ('cohort_end_date', models.DateField()),
            ],
            options={
                'db_table': 'cohort',
            },
        ),
        migrations.CreateModel(
            name='Concept',
            fields=[
                ('concept_id', models.IntegerField(primary_key=True, serialize=False)),
                ('concept_name', models.CharField(max_length=255)),
                ('standard_concept', models.CharField(blank=True, max_length=1, null=True)),
                ('concept_code', models.CharField(max_length=50)),
                ('valid_start_date', models.DateField()),
                ('valid_end_date', models.DateField()),
                ('invalid_reason', models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                'db_table': 'concept',
            },
        ),
        migrations.CreateModel(
            name='ConceptClass',
            fields=[
                ('concept_class_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('concept_class_name', models.CharField(max_length=255)),
                ('concept_class_concept_id', models.IntegerField()),
            ],
            options={
                'db_table': 'concept_class',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('domain_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('domain_name', models.CharField(max_length=255)),
                ('domain_concept_id', models.IntegerField()),
            ],
            options={
                'db_table': 'domain',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.AutoField(primary_key=True, serialize=False)),
                ('address_1', models.CharField(blank=True, max_length=50, null=True)),
                ('address_2', models.CharField(blank=True, max_length=50, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=2, null=True)),
                ('zip', models.CharField(blank=True, max_length=9, null=True)),
                ('county', models.CharField(blank=True, max_length=20, null=True)),
                ('location_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('country_source_value', models.CharField(blank=True, max_length=80, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=15, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=15, null=True)),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='Vocabulary',
            fields=[
                ('vocabulary_id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('vocabulary_name', models.CharField(max_length=255)),
                ('vocabulary_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('vocabulary_version', models.CharField(blank=True, max_length=255, null=True)),
                ('vocabulary_concept_id', models.IntegerField()),
            ],
            options={
                'db_table': 'vocabulary',
            },
        ),
        migrations.CreateModel(
            name='CohortAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_definition_id', models.IntegerField()),
                ('subject_id', models.IntegerField()),
                ('cohort_start_date', models.DateField()),
                ('cohort_end_date', models.DateField()),
                ('attribute_definition_id', models.IntegerField()),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('value_as_concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
            ],
            options={
                'db_table': 'cohort_attribute',
            },
        ),
        migrations.CreateModel(
            name='CareSite',
            fields=[
                ('care_site_id', models.AutoField(primary_key=True, serialize=False)),
                ('care_site_name', models.CharField(blank=True, max_length=255, null=True)),
                ('care_site_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('place_of_service_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('place_of_service_concept', models.ForeignKey(blank=True, db_column='place_of_service_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
            ],
            options={
                'db_table': 'care_site',
            },
        ),
        migrations.AddField(
            model_name='concept',
            name='concept_class',
            field=models.ForeignKey(db_column='concept_class_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.conceptclass'),
        ),
        migrations.CreateModel(
            name='ConceptSynonym',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('concept_synonym_name', models.CharField(max_length=1000)),
                ('language_concept_id', models.IntegerField()),
                ('concept', models.ForeignKey(db_column='concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
            ],
            options={
                'db_table': 'concept_synonym',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('person_id', models.AutoField(primary_key=True, serialize=False)),
                ('year_of_birth', models.IntegerField()),
                ('month_of_birth', models.IntegerField(blank=True, null=True)),
                ('day_of_birth', models.IntegerField(blank=True, null=True)),
                ('birth_datetime', models.DateTimeField(blank=True, null=True)),
                ('person_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('gender_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('race_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('ethnicity_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.caresite')),
                ('ethnicity_concept', models.ForeignKey(db_column='ethnicity_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='person_ethnicity', to='omop_core.concept')),
                ('ethnicity_source_concept', models.ForeignKey(blank=True, db_column='ethnicity_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_ethnicity_source', to='omop_core.concept')),
                ('gender_concept', models.ForeignKey(db_column='gender_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('gender_source_concept', models.ForeignKey(blank=True, db_column='gender_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_gender_source', to='omop_core.concept')),
                ('race_concept', models.ForeignKey(db_column='race_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='person_race', to='omop_core.concept')),
                ('race_source_concept', models.ForeignKey(blank=True, db_column='race_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_race_source', to='omop_core.concept')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.location')),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='ConditionEra',
            fields=[
                ('condition_era_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition_era_start_date', models.DateField()),
                ('condition_era_end_date', models.DateField()),
                ('condition_occurrence_count', models.IntegerField(blank=True, null=True)),
                ('condition_concept', models.ForeignKey(db_column='condition_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
            ],
            options={
                'db_table': 'condition_era',
            },
        ),
        migrations.AddField(
            model_name='concept',
            name='domain',
            field=models.ForeignKey(db_column='domain_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.domain'),
        ),
        migrations.CreateModel(
            name='DoseEra',
            fields=[
                ('dose_era_id', models.AutoField(primary_key=True, serialize=False)),
                ('dose_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dose_era_start_date', models.DateField()),
                ('dose_era_end_date', models.DateField()),
                ('drug_concept', models.ForeignKey(db_column='drug_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('unit_concept', models.ForeignKey(db_column='unit_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='dose_era_units', to='omop_core.concept')),
            ],
            options={
                'db_table': 'dose_era',
            },
        ),
        migrations.CreateModel(
            name='DrugEra',
            fields=[
                ('drug_era_id', models.AutoField(primary_key=True, serialize=False)),
                ('drug_era_start_date', models.DateField()),
                ('drug_era_end_date', models.DateField()),
                ('drug_exposure_count', models.IntegerField(blank=True, null=True)),
                ('gap_days', models.IntegerField(blank=True, null=True)),
                ('drug_concept', models.ForeignKey(db_column='drug_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
            ],
            options={
                'db_table': 'drug_era',
            },
        ),
        migrations.CreateModel(
            name='DrugStrength',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('numerator_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('denominator_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('box_size', models.IntegerField(blank=True, null=True)),
                ('valid_start_date', models.DateField()),
                ('valid_end_date', models.DateField()),
                ('invalid_reason', models.CharField(blank=True, max_length=1, null=True)),
                ('amount_unit_concept', models.ForeignKey(blank=True, db_column='amount_unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='amount_unit_strengths', to='omop_core.concept')),
                ('denominator_unit_concept', models.ForeignKey(blank=True, db_column='denominator_unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='denominator_unit_strengths', to='omop_core.concept')),
                ('drug_concept', models.ForeignKey(db_column='drug_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='drug_strengths', to='omop_core.concept')),
                ('ingredient_concept', models.ForeignKey(db_column='ingredient_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_strengths', to='omop_core.concept')),
                ('numerator_unit_concept', models.ForeignKey(blank=True, db_column='numerator_unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='numerator_unit_strengths', to='omop_core.concept')),
            ],
            options={
                'db_table': 'drug_strength',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='country_concept',
            field=models.ForeignKey(blank=True, db_column='country_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept'),
        ),
        migrations.AddField(
            model_name='caresite',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.location'),
        ),
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('metadata_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=250)),
                ('value_as_string', models.TextField(blank=True, null=True)),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('metadata_date', models.DateField(blank=True, null=True)),
                ('metadata_datetime', models.DateTimeField(blank=True, null=True)),
                ('metadata_concept', models.ForeignKey(db_column='metadata_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('metadata_type_concept', models.ForeignKey(db_column='metadata_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='metadata_types', to='omop_core.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, db_column='value_as_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='metadata_values', to='omop_core.concept')),
            ],
            options={
                'db_table': 'metadata',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('note_id', models.AutoField(primary_key=True, serialize=False)),
                ('note_date', models.DateField()),
                ('note_datetime', models.DateTimeField(blank=True, null=True)),
                ('note_title', models.CharField(blank=True, max_length=250, null=True)),
                ('note_text', models.TextField()),
                ('note_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('note_event_id', models.IntegerField(blank=True, null=True)),
                ('note_event_field_concept_id', models.IntegerField(blank=True, null=True)),
                ('encoding_concept', models.ForeignKey(db_column='encoding_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='note_encodings', to='omop_core.concept')),
                ('language_concept', models.ForeignKey(db_column='language_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='note_languages', to='omop_core.concept')),
                ('note_class_concept', models.ForeignKey(db_column='note_class_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='note_classes', to='omop_core.concept')),
                ('note_type_concept', models.ForeignKey(db_column='note_type_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
            ],
            options={
                'db_table': 'note',
            },
        ),
        migrations.CreateModel(
            name='NoteNlp',
            fields=[
                ('note_nlp_id', models.AutoField(primary_key=True, serialize=False)),
                ('snippet', models.CharField(blank=True, max_length=250, null=True)),
                ('offset', models.CharField(blank=True, max_length=50, null=True)),
                ('lexical_variant', models.CharField(max_length=250)),
                ('nlp_system', models.CharField(blank=True, max_length=250, null=True)),
                ('nlp_date', models.DateField()),
                ('nlp_datetime', models.DateTimeField(blank=True, null=True)),
                ('term_exists', models.CharField(blank=True, max_length=1, null=True)),
                ('term_temporal', models.CharField(blank=True, max_length=50, null=True)),
                ('term_modifiers', models.CharField(blank=True, max_length=2000, null=True)),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.note')),
                ('note_nlp_concept', models.ForeignKey(blank=True, db_column='note_nlp_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('note_nlp_source_concept', models.ForeignKey(blank=True, db_column='note_nlp_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note_nlp_sources', to='omop_core.concept')),
                ('section_concept', models.ForeignKey(blank=True, db_column='section_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='note_nlp_sections', to='omop_core.concept')),
            ],
            options={
                'db_table': 'note_nlp',
            },
        ),
        migrations.CreateModel(
            name='ObservationPeriod',
            fields=[
                ('observation_period_id', models.AutoField(primary_key=True, serialize=False)),
                ('observation_period_start_date', models.DateField()),
                ('observation_period_end_date', models.DateField()),
                ('period_type_concept', models.ForeignKey(db_column='period_type_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
            ],
            options={
                'db_table': 'observation_period',
            },
        ),
        migrations.CreateModel(
            name='PayerPlanPeriod',
            fields=[
                ('payer_plan_period_id', models.AutoField(primary_key=True, serialize=False)),
                ('payer_plan_period_start_date', models.DateField()),
                ('payer_plan_period_end_date', models.DateField()),
                ('payer_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('plan_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('sponsor_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('family_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('stop_reason_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('payer_concept', models.ForeignKey(blank=True, db_column='payer_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payer_plans', to='omop_core.concept')),
                ('payer_source_concept', models.ForeignKey(blank=True, db_column='payer_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payer_sources', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('plan_concept', models.ForeignKey(blank=True, db_column='plan_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_concepts', to='omop_core.concept')),
                ('plan_source_concept', models.ForeignKey(blank=True, db_column='plan_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plan_sources', to='omop_core.concept')),
                ('sponsor_concept', models.ForeignKey(blank=True, db_column='sponsor_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_concepts', to='omop_core.concept')),
                ('sponsor_source_concept', models.ForeignKey(blank=True, db_column='sponsor_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sponsor_sources', to='omop_core.concept')),
                ('stop_reason_concept', models.ForeignKey(blank=True, db_column='stop_reason_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stop_reasons', to='omop_core.concept')),
                ('stop_reason_source_concept', models.ForeignKey(blank=True, db_column='stop_reason_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stop_reason_sources', to='omop_core.concept')),
            ],
            options={
                'db_table': 'payer_plan_period',
            },
        ),
        migrations.CreateModel(
            name='Cost',
            fields=[
                ('cost_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost_event_id', models.IntegerField()),
                ('cost_domain_id', models.CharField(max_length=20)),
                ('total_charge', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('total_paid', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_by_payer', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_by_patient', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_patient_copay', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_patient_coinsurance', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_patient_deductible', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_by_primary', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_ingredient_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('paid_dispensing_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('amount_allowed', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('revenue_code_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('drg_source_value', models.CharField(blank=True, max_length=3, null=True)),
                ('cost_type_concept', models.ForeignKey(db_column='cost_type_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('currency_concept', models.ForeignKey(blank=True, db_column='currency_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cost_currencies', to='omop_core.concept')),
                ('drg_concept', models.ForeignKey(blank=True, db_column='drg_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drg_concepts', to='omop_core.concept')),
                ('revenue_code_concept', models.ForeignKey(blank=True, db_column='revenue_code_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='revenue_codes', to='omop_core.concept')),
                ('payer_plan_period', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.payerplanperiod')),
            ],
            options={
                'db_table': 'cost',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('provider_id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_name', models.CharField(blank=True, max_length=255, null=True)),
                ('npi', models.CharField(blank=True, max_length=20, null=True)),
                ('dea', models.CharField(blank=True, max_length=20, null=True)),
                ('year_of_birth', models.IntegerField(blank=True, null=True)),
                ('provider_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('specialty_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('gender_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.caresite')),
                ('gender_concept', models.ForeignKey(blank=True, db_column='gender_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider_gender', to='omop_core.concept')),
                ('gender_source_concept', models.ForeignKey(blank=True, db_column='gender_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider_gender_source', to='omop_core.concept')),
                ('specialty_concept', models.ForeignKey(blank=True, db_column='specialty_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('specialty_source_concept', models.ForeignKey(blank=True, db_column='specialty_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='provider_specialty_source', to='omop_core.concept')),
            ],
            options={
                'db_table': 'provider',
            },
        ),
        migrations.AddField(
            model_name='person',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider'),
        ),
        migrations.AddField(
            model_name='note',
            name='provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider'),
        ),
        migrations.CreateModel(
            name='SourceToConceptMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_code', models.CharField(max_length=50)),
                ('source_vocabulary_id', models.CharField(max_length=20)),
                ('source_code_description', models.CharField(blank=True, max_length=255, null=True)),
                ('target_vocabulary_id', models.CharField(max_length=20)),
                ('valid_start_date', models.DateField()),
                ('valid_end_date', models.DateField()),
                ('invalid_reason', models.CharField(blank=True, max_length=1, null=True)),
                ('source_concept', models.ForeignKey(db_column='source_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='source_mappings', to='omop_core.concept')),
                ('target_concept', models.ForeignKey(db_column='target_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='target_mappings', to='omop_core.concept')),
            ],
            options={
                'db_table': 'source_to_concept_map',
            },
        ),
        migrations.CreateModel(
            name='Specimen',
            fields=[
                ('specimen_id', models.AutoField(primary_key=True, serialize=False)),
                ('specimen_date', models.DateField()),
                ('specimen_datetime', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('specimen_source_id', models.CharField(blank=True, max_length=50, null=True)),
                ('specimen_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('anatomic_site_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('disease_status_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('anatomic_site_concept', models.ForeignKey(blank=True, db_column='anatomic_site_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specimen_anatomic_sites', to='omop_core.concept')),
                ('disease_status_concept', models.ForeignKey(blank=True, db_column='disease_status_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specimen_disease_statuses', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('specimen_concept', models.ForeignKey(db_column='specimen_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('specimen_type_concept', models.ForeignKey(db_column='specimen_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='specimen_types', to='omop_core.concept')),
                ('unit_concept', models.ForeignKey(blank=True, db_column='unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specimen_units', to='omop_core.concept')),
            ],
            options={
                'db_table': 'specimen',
            },
        ),
        migrations.CreateModel(
            name='VisitDetail',
            fields=[
                ('visit_detail_id', models.AutoField(primary_key=True, serialize=False)),
                ('visit_detail_start_date', models.DateField()),
                ('visit_detail_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_detail_end_date', models.DateField()),
                ('visit_detail_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_detail_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('admitted_from_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('discharged_to_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('admitted_from_concept', models.ForeignKey(blank=True, db_column='admitted_from_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visit_detail_admitted_from', to='omop_core.concept')),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.caresite')),
                ('discharged_to_concept', models.ForeignKey(blank=True, db_column='discharged_to_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visit_detail_discharged_to', to='omop_core.concept')),
                ('parent_visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_visit_details', to='omop_core.visitdetail')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('preceding_visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail_concept', models.ForeignKey(db_column='visit_detail_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('visit_detail_source_concept', models.ForeignKey(blank=True, db_column='visit_detail_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visit_detail_sources', to='omop_core.concept')),
                ('visit_detail_type_concept', models.ForeignKey(db_column='visit_detail_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='visit_detail_types', to='omop_core.concept')),
            ],
            options={
                'db_table': 'visit_detail',
            },
        ),
        migrations.AddField(
            model_name='note',
            name='visit_detail',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail'),
        ),
        migrations.CreateModel(
            name='VisitOccurrence',
            fields=[
                ('visit_occurrence_id', models.AutoField(primary_key=True, serialize=False)),
                ('visit_start_date', models.DateField()),
                ('visit_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_end_date', models.DateField()),
                ('visit_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('visit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('admitted_from_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('discharged_to_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('admitted_from_concept', models.ForeignKey(blank=True, db_column='admitted_from_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admitted_from', to='omop_core.concept')),
                ('care_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.caresite')),
                ('discharged_to_concept', models.ForeignKey(blank=True, db_column='discharged_to_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discharged_to', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('preceding_visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_concept', models.ForeignKey(db_column='visit_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('visit_source_concept', models.ForeignKey(blank=True, db_column='visit_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visit_sources', to='omop_core.concept')),
                ('visit_type_concept', models.ForeignKey(db_column='visit_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='visit_types', to='omop_core.concept')),
            ],
            options={
                'db_table': 'visit_occurrence',
            },
        ),
        migrations.AddField(
            model_name='visitdetail',
            name='visit_occurrence',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence'),
        ),
        migrations.CreateModel(
            name='ProcedureOccurrence',
            fields=[
                ('procedure_occurrence_id', models.AutoField(primary_key=True, serialize=False)),
                ('procedure_date', models.DateField()),
                ('procedure_datetime', models.DateTimeField(blank=True, null=True)),
                ('procedure_end_date', models.DateField(blank=True, null=True)),
                ('procedure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('procedure_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('modifier_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('modifier_concept', models.ForeignKey(blank=True, db_column='modifier_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedure_modifiers', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('procedure_concept', models.ForeignKey(db_column='procedure_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('procedure_source_concept', models.ForeignKey(blank=True, db_column='procedure_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='procedure_sources', to='omop_core.concept')),
                ('procedure_type_concept', models.ForeignKey(db_column='procedure_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='procedure_types', to='omop_core.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'procedure_occurrence',
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('observation_id', models.AutoField(primary_key=True, serialize=False)),
                ('observation_date', models.DateField()),
                ('observation_datetime', models.DateTimeField(blank=True, null=True)),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('value_as_string', models.CharField(blank=True, max_length=60, null=True)),
                ('observation_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('qualifier_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('value_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('observation_event_id', models.IntegerField(blank=True, null=True)),
                ('obs_event_field_concept_id', models.IntegerField(blank=True, null=True)),
                ('observation_concept', models.ForeignKey(db_column='observation_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('observation_source_concept', models.ForeignKey(blank=True, db_column='observation_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observation_sources', to='omop_core.concept')),
                ('observation_type_concept', models.ForeignKey(db_column='observation_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='observation_types', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('qualifier_concept', models.ForeignKey(blank=True, db_column='qualifier_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observation_qualifiers', to='omop_core.concept')),
                ('unit_concept', models.ForeignKey(blank=True, db_column='unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observation_units', to='omop_core.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, db_column='value_as_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='observation_values', to='omop_core.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'observation',
            },
        ),
        migrations.AddField(
            model_name='note',
            name='visit_occurrence',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence'),
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('measurement_id', models.AutoField(primary_key=True, serialize=False)),
                ('measurement_date', models.DateField()),
                ('measurement_datetime', models.DateTimeField(blank=True, null=True)),
                ('measurement_time', models.CharField(blank=True, max_length=10, null=True)),
                ('value_as_number', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('range_low', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('range_high', models.DecimalField(blank=True, decimal_places=3, max_digits=15, null=True)),
                ('measurement_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('value_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('measurement_event_id', models.IntegerField(blank=True, null=True)),
                ('meas_event_field_concept_id', models.IntegerField(blank=True, null=True)),
                ('measurement_concept', models.ForeignKey(db_column='measurement_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('measurement_source_concept', models.ForeignKey(blank=True, db_column='measurement_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurement_sources', to='omop_core.concept')),
                ('measurement_type_concept', models.ForeignKey(db_column='measurement_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='measurement_types', to='omop_core.concept')),
                ('operator_concept', models.ForeignKey(blank=True, db_column='operator_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurement_operators', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('unit_concept', models.ForeignKey(blank=True, db_column='unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurement_units', to='omop_core.concept')),
                ('unit_source_concept', models.ForeignKey(blank=True, db_column='unit_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurement_unit_sources', to='omop_core.concept')),
                ('value_as_concept', models.ForeignKey(blank=True, db_column='value_as_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='measurement_values', to='omop_core.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'measurement',
            },
        ),
        migrations.CreateModel(
            name='DrugExposure',
            fields=[
                ('drug_exposure_id', models.AutoField(primary_key=True, serialize=False)),
                ('drug_exposure_start_date', models.DateField()),
                ('drug_exposure_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('drug_exposure_end_date', models.DateField()),
                ('drug_exposure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('verbatim_end_date', models.DateField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('refills', models.IntegerField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('days_supply', models.IntegerField(blank=True, null=True)),
                ('sig', models.TextField(blank=True, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=50, null=True)),
                ('drug_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('route_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('dose_unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('drug_concept', models.ForeignKey(db_column='drug_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('drug_source_concept', models.ForeignKey(blank=True, db_column='drug_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_sources', to='omop_core.concept')),
                ('drug_type_concept', models.ForeignKey(db_column='drug_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='drug_types', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('route_concept', models.ForeignKey(blank=True, db_column='route_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drug_routes', to='omop_core.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'drug_exposure',
            },
        ),
        migrations.CreateModel(
            name='DeviceExposure',
            fields=[
                ('device_exposure_id', models.AutoField(primary_key=True, serialize=False)),
                ('device_exposure_start_date', models.DateField()),
                ('device_exposure_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('device_exposure_end_date', models.DateField(blank=True, null=True)),
                ('device_exposure_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('unique_device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('production_id', models.CharField(blank=True, max_length=255, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('device_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('unit_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('device_concept', models.ForeignKey(db_column='device_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('device_source_concept', models.ForeignKey(blank=True, db_column='device_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_sources', to='omop_core.concept')),
                ('device_type_concept', models.ForeignKey(db_column='device_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='device_types', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('unit_concept', models.ForeignKey(blank=True, db_column='unit_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_units', to='omop_core.concept')),
                ('unit_source_concept', models.ForeignKey(blank=True, db_column='unit_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='device_unit_sources', to='omop_core.concept')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'device_exposure',
            },
        ),
        migrations.CreateModel(
            name='ConditionOccurrence',
            fields=[
                ('condition_occurrence_id', models.AutoField(primary_key=True, serialize=False)),
                ('condition_start_date', models.DateField()),
                ('condition_start_datetime', models.DateTimeField(blank=True, null=True)),
                ('condition_end_date', models.DateField(blank=True, null=True)),
                ('condition_end_datetime', models.DateTimeField(blank=True, null=True)),
                ('stop_reason', models.CharField(blank=True, max_length=20, null=True)),
                ('condition_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('condition_status_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('condition_concept', models.ForeignKey(db_column='condition_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
                ('condition_source_concept', models.ForeignKey(blank=True, db_column='condition_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='condition_sources', to='omop_core.concept')),
                ('condition_status_concept', models.ForeignKey(blank=True, db_column='condition_status_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='condition_statuses', to='omop_core.concept')),
                ('condition_type_concept', models.ForeignKey(db_column='condition_type_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='condition_types', to='omop_core.concept')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='omop_core.person')),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.provider')),
                ('visit_detail', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitdetail')),
                ('visit_occurrence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='omop_core.visitoccurrence')),
            ],
            options={
                'db_table': 'condition_occurrence',
            },
        ),
        migrations.AddField(
            model_name='concept',
            name='vocabulary',
            field=models.ForeignKey(db_column='vocabulary_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.vocabulary'),
        ),
        migrations.CreateModel(
            name='ConceptAncestor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_levels_of_separation', models.IntegerField()),
                ('max_levels_of_separation', models.IntegerField()),
                ('ancestor_concept', models.ForeignKey(db_column='ancestor_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='descendant_relationships', to='omop_core.concept')),
                ('descendant_concept', models.ForeignKey(db_column='descendant_concept_id', on_delete=django.db.models.deletion.CASCADE, related_name='ancestor_relationships', to='omop_core.concept')),
            ],
            options={
                'db_table': 'concept_ancestor',
                'unique_together': {('ancestor_concept', 'descendant_concept')},
            },
        ),
        migrations.CreateModel(
            name='ConceptRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship_id', models.CharField(max_length=20)),
                ('valid_start_date', models.DateField()),
                ('valid_end_date', models.DateField()),
                ('invalid_reason', models.CharField(blank=True, max_length=1, null=True)),
                ('concept_id_1', models.ForeignKey(db_column='concept_id_1', on_delete=django.db.models.deletion.CASCADE, related_name='relationships_as_concept_1', to='omop_core.concept')),
                ('concept_id_2', models.ForeignKey(db_column='concept_id_2', on_delete=django.db.models.deletion.CASCADE, related_name='relationships_as_concept_2', to='omop_core.concept')),
            ],
            options={
                'db_table': 'concept_relationship',
                'unique_together': {('concept_id_1', 'concept_id_2', 'relationship_id')},
            },
        ),
        migrations.CreateModel(
            name='Death',
            fields=[
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='omop_core.person')),
                ('death_date', models.DateField()),
                ('death_datetime', models.DateTimeField(blank=True, null=True)),
                ('cause_source_value', models.CharField(blank=True, max_length=50, null=True)),
                ('cause_concept', models.ForeignKey(blank=True, db_column='cause_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='death_causes', to='omop_core.concept')),
                ('cause_source_concept', models.ForeignKey(blank=True, db_column='cause_source_concept_id', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='death_cause_sources', to='omop_core.concept')),
                ('death_type_concept', models.ForeignKey(db_column='death_type_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
            ],
            options={
                'db_table': 'death',
            },
        ),
        migrations.CreateModel(
            name='FactRelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_concept_id_1', models.IntegerField()),
                ('fact_id_1', models.IntegerField()),
                ('domain_concept_id_2', models.IntegerField()),
                ('fact_id_2', models.IntegerField()),
                ('relationship_concept', models.ForeignKey(db_column='relationship_concept_id', on_delete=django.db.models.deletion.CASCADE, to='omop_core.concept')),
            ],
            options={
                'db_table': 'fact_relationship',
                'unique_together': {('domain_concept_id_1', 'fact_id_1', 'domain_concept_id_2', 'fact_id_2', 'relationship_concept')},
            },
        ),
    ]
