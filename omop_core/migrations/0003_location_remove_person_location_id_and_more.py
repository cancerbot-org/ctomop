# Generated by Django 4.2.24 on 2025-09-16 12:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("omop_core", "0002_patientinfo"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "location_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                ("address_1", models.CharField(blank=True, max_length=50, null=True)),
                ("address_2", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(blank=True, max_length=2, null=True)),
                ("zip", models.CharField(blank=True, max_length=9, null=True)),
                ("county", models.CharField(blank=True, max_length=20, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "location_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
            ],
            options={
                "db_table": "location",
            },
        ),
        migrations.RemoveField(
            model_name="person",
            name="location_id",
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="behavior_concept",
            field=models.ForeignKey(
                blank=True,
                db_column="behavior_concept_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="condition_behaviors",
                to="omop_core.concept",
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="clinical_stage_group",
            field=models.CharField(
                blank=True, help_text="Overall clinical stage", max_length=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="grade_concept",
            field=models.ForeignKey(
                blank=True,
                db_column="grade_concept_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="condition_grades",
                to="omop_core.concept",
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="histology_concept",
            field=models.ForeignKey(
                blank=True,
                db_column="histology_concept_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="condition_histologies",
                to="omop_core.concept",
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="laterality",
            field=models.CharField(
                blank=True, help_text="Tumor laterality", max_length=20, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="metastatic_sites",
            field=models.TextField(
                blank=True, help_text="JSON list of metastatic sites", null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="pathologic_stage_group",
            field=models.CharField(
                blank=True,
                help_text="Overall pathologic stage",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="primary_site_concept",
            field=models.ForeignKey(
                blank=True,
                db_column="primary_site_concept_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="condition_primary_sites",
                to="omop_core.concept",
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="progression_status",
            field=models.CharField(
                blank=True,
                help_text="Disease progression status",
                max_length=50,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="staging_system",
            field=models.CharField(
                blank=True, help_text="Staging system used", max_length=50, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_clinical_m",
            field=models.CharField(
                blank=True, help_text="Clinical M stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_clinical_n",
            field=models.CharField(
                blank=True, help_text="Clinical N stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_clinical_t",
            field=models.CharField(
                blank=True, help_text="Clinical T stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_pathologic_m",
            field=models.CharField(
                blank=True, help_text="Pathologic M stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_pathologic_n",
            field=models.CharField(
                blank=True, help_text="Pathologic N stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tnm_pathologic_t",
            field=models.CharField(
                blank=True, help_text="Pathologic T stage", max_length=10, null=True
            ),
        ),
        migrations.AddField(
            model_name="conditionoccurrence",
            name="tumor_size_cm",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Tumor size in cm",
                max_digits=6,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="death_datetime",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="person",
            name="language_skill_level",
            field=models.CharField(
                blank=True,
                help_text="Language skill level: speak, write, both",
                max_length=10,
                null=True,
            ),
        ),
        migrations.AddField(
            model_name="person",
            name="primary_language_concept",
            field=models.ForeignKey(
                blank=True,
                db_column="primary_language_concept_id",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="person_primary_language",
                to="omop_core.concept",
            ),
        ),
        migrations.CreateModel(
            name="VitalSignMeasurement",
            fields=[
                (
                    "vital_sign_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                ("measurement_date", models.DateField()),
                ("measurement_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "vital_sign_type",
                    models.CharField(
                        choices=[
                            ("BLOOD_PRESSURE", "Blood Pressure"),
                            ("HEART_RATE", "Heart Rate"),
                            ("RESPIRATORY_RATE", "Respiratory Rate"),
                            ("TEMPERATURE", "Temperature"),
                            ("OXYGEN_SATURATION", "Oxygen Saturation"),
                            ("WEIGHT", "Weight"),
                            ("HEIGHT", "Height"),
                            ("BMI", "Body Mass Index"),
                            ("BSA", "Body Surface Area"),
                            ("PAIN_SCORE", "Pain Score"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "systolic_bp",
                    models.IntegerField(
                        blank=True,
                        help_text="Systolic blood pressure (mmHg)",
                        null=True,
                    ),
                ),
                (
                    "diastolic_bp",
                    models.IntegerField(
                        blank=True,
                        help_text="Diastolic blood pressure (mmHg)",
                        null=True,
                    ),
                ),
                (
                    "heart_rate",
                    models.IntegerField(
                        blank=True, help_text="Heart rate (bpm)", null=True
                    ),
                ),
                (
                    "respiratory_rate",
                    models.IntegerField(
                        blank=True,
                        help_text="Respiratory rate (breaths/min)",
                        null=True,
                    ),
                ),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Temperature",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "temperature_unit",
                    models.CharField(
                        blank=True,
                        choices=[("C", "Celsius"), ("F", "Fahrenheit")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "oxygen_saturation",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="O2 saturation (%)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "weight",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Weight",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "weight_unit",
                    models.CharField(
                        blank=True,
                        choices=[("kg", "Kilograms"), ("lb", "Pounds")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "height_unit",
                    models.CharField(
                        blank=True,
                        choices=[("cm", "Centimeters"), ("in", "Inches")],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "bmi",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Body Mass Index",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "bsa",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Body Surface Area (m²)",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "pain_score",
                    models.IntegerField(
                        blank=True, help_text="Pain score (0-10)", null=True
                    ),
                ),
                (
                    "measurement_position",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SITTING", "Sitting"),
                            ("STANDING", "Standing"),
                            ("LYING", "Lying Down"),
                            ("SUPINE", "Supine"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "measurement_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "person",
                    models.ForeignKey(
                        db_column="person_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.person",
                    ),
                ),
            ],
            options={
                "db_table": "vital_sign_measurement",
            },
        ),
        migrations.CreateModel(
            name="ObservationExtension",
            fields=[
                (
                    "observation_extension_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "assessment_method",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "assessor_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PHYSICIAN", "Physician"),
                            ("NURSE", "Nurse"),
                            ("PATIENT", "Patient Self-Assessment"),
                            ("CAREGIVER", "Caregiver"),
                            ("OTHER", "Other"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "symptom_severity",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NONE", "None"),
                            ("MILD", "Mild"),
                            ("MODERATE", "Moderate"),
                            ("SEVERE", "Severe"),
                            ("LIFE_THREATENING", "Life Threatening"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "assessment_context",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("ROUTINE", "Routine Assessment"),
                            ("BASELINE", "Baseline Assessment"),
                            ("PRE_TREATMENT", "Pre-Treatment"),
                            ("POST_TREATMENT", "Post-Treatment"),
                            ("FOLLOW_UP", "Follow-up"),
                            ("ADVERSE_EVENT", "Adverse Event Assessment"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("clinical_notes", models.TextField(blank=True, null=True)),
                (
                    "observation",
                    models.OneToOneField(
                        db_column="observation_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.observation",
                    ),
                ),
            ],
            options={
                "db_table": "observation_extension",
            },
        ),
        migrations.CreateModel(
            name="MeasurementExtension",
            fields=[
                (
                    "measurement_extension_id",
                    models.BigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "normal_range_low",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=15, null=True
                    ),
                ),
                (
                    "normal_range_high",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=15, null=True
                    ),
                ),
                (
                    "critical_low",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=15, null=True
                    ),
                ),
                (
                    "critical_high",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=15, null=True
                    ),
                ),
                ("is_abnormal", models.BooleanField(blank=True, null=True)),
                (
                    "clinical_significance",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("NORMAL", "Normal"),
                            ("ABNORMAL_LOW", "Abnormally Low"),
                            ("ABNORMAL_HIGH", "Abnormally High"),
                            ("CRITICAL_LOW", "Critically Low"),
                            ("CRITICAL_HIGH", "Critically High"),
                            ("INDETERMINATE", "Indeterminate"),
                        ],
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "assay_method",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "specimen_source",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "test_quality",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("VALID", "Valid"),
                            ("QUESTIONABLE", "Questionable"),
                            ("INVALID", "Invalid"),
                            ("HEMOLYZED", "Hemolyzed"),
                            ("CLOTTED", "Clotted"),
                            ("INSUFFICIENT", "Insufficient Sample"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "measurement",
                    models.OneToOneField(
                        db_column="measurement_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="omop_core.measurement",
                    ),
                ),
            ],
            options={
                "db_table": "measurement_extension",
            },
        ),
        migrations.AddField(
            model_name="person",
            name="location",
            field=models.ForeignKey(
                blank=True,
                db_column="location_id",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="omop_core.location",
            ),
        ),
    ]
