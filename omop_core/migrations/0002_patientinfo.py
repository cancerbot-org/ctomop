# Generated by Django 4.2.24 on 2025-09-16 12:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("omop_core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PatientInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "languages",
                    models.TextField(
                        blank=True,
                        help_text="Language codes like 'en', 'de', 'es'",
                        null=True,
                    ),
                ),
                (
                    "language_skill_level",
                    models.TextField(
                        blank=True, help_text="'speak' or 'write'", null=True
                    ),
                ),
                (
                    "patient_age",
                    models.IntegerField(
                        blank=True, help_text="What is the patient's age?", null=True
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("U", "Unknown")],
                        help_text="Patient's gender",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "weight",
                    models.FloatField(
                        blank=True, help_text="Patient's weight", null=True
                    ),
                ),
                (
                    "weight_units",
                    models.CharField(
                        blank=True,
                        choices=[("kg", "Kilograms"), ("lb", "Pounds")],
                        default="kg",
                        help_text="Units for the patient's weight",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        blank=True, help_text="Patient's height", null=True
                    ),
                ),
                (
                    "height_units",
                    models.CharField(
                        blank=True,
                        choices=[("cm", "Centimeters"), ("in", "Inches")],
                        default="cm",
                        help_text="Units for the patient's height",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "bmi",
                    models.FloatField(
                        blank=True,
                        editable=False,
                        help_text="Patient's BMI (computed)",
                        null=True,
                    ),
                ),
                ("ethnicity", models.TextField(blank=True, null=True)),
                (
                    "systolic_blood_pressure",
                    models.IntegerField(
                        blank=True,
                        help_text="Patient's systolic blood pressure",
                        null=True,
                    ),
                ),
                (
                    "diastolic_blood_pressure",
                    models.IntegerField(
                        blank=True,
                        help_text="Patient's diastolic blood pressure",
                        null=True,
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=255, null=True)),
                ("region", models.CharField(blank=True, max_length=255, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("disease", models.TextField(blank=True, null=True)),
                ("stage", models.TextField(blank=True, null=True)),
                (
                    "karnofsky_performance_score",
                    models.IntegerField(blank=True, default=100, null=True),
                ),
                ("ecog_performance_status", models.IntegerField(blank=True, null=True)),
                ("no_other_active_malignancies", models.BooleanField(default=True)),
                (
                    "no_pre_existing_conditions",
                    models.BooleanField(blank=True, null=True),
                ),
                (
                    "peripheral_neuropathy_grade",
                    models.IntegerField(blank=True, null=True),
                ),
                ("cytogenic_markers", models.TextField(blank=True, null=True)),
                ("molecular_markers", models.TextField(blank=True, null=True)),
                (
                    "stem_cell_transplant_history",
                    models.JSONField(blank=True, default=list, null=True),
                ),
                (
                    "plasma_cell_leukemia",
                    models.BooleanField(blank=True, default=True, null=True),
                ),
                ("progression", models.TextField(blank=True, null=True)),
                (
                    "heartrate",
                    models.IntegerField(
                        blank=True, help_text="Patient's heart rate", null=True
                    ),
                ),
                (
                    "heartrate_variability",
                    models.IntegerField(
                        blank=True,
                        help_text="Patient's heart rate variability",
                        null=True,
                    ),
                ),
                ("condition_code_icd_10", models.TextField(blank=True, null=True)),
                ("condition_code_snomed_ct", models.TextField(blank=True, null=True)),
                ("prior_therapy", models.TextField(blank=True, null=True)),
                ("first_line_therapy", models.TextField(blank=True, null=True)),
                ("first_line_date", models.DateField(blank=True, null=True)),
                ("first_line_outcome", models.TextField(blank=True, null=True)),
                ("second_line_therapy", models.TextField(blank=True, null=True)),
                ("second_line_date", models.DateField(blank=True, null=True)),
                ("second_line_outcome", models.TextField(blank=True, null=True)),
                ("later_therapy", models.TextField(blank=True, null=True)),
                ("later_date", models.DateField(blank=True, null=True)),
                ("later_outcome", models.TextField(blank=True, null=True)),
                ("supportive_therapies", models.TextField(blank=True, null=True)),
                ("supportive_therapy_date", models.DateField(blank=True, null=True)),
                ("relapse_count", models.IntegerField(blank=True, null=True)),
                (
                    "treatment_refractory_status",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("therapy_lines_count", models.IntegerField(blank=True, null=True)),
                ("line_of_therapy", models.TextField(blank=True, null=True)),
                (
                    "absolute_neutrophile_count",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "absolute_neutrophile_count_units",
                    models.CharField(
                        blank=True,
                        choices=[("CELLS/UL", "10^3/μL"), ("CELLS/L", "10^9/L")],
                        default="CELLS/UL",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("platelet_count", models.IntegerField(blank=True, null=True)),
                (
                    "platelet_count_units",
                    models.CharField(
                        blank=True,
                        choices=[("CELLS/UL", "10^3/μL"), ("CELLS/L", "10^9/L")],
                        default="CELLS/UL",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "white_blood_cell_count",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "white_blood_cell_count_units",
                    models.CharField(
                        blank=True,
                        choices=[("CELLS/UL", "10^3/μL"), ("CELLS/L", "10^9/L")],
                        default="CELLS/L",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "red_blood_cell_count",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "red_blood_cell_count_units",
                    models.CharField(
                        blank=True,
                        choices=[("CELLS/UL", "10^3/μL"), ("CELLS/L", "10^9/L")],
                        default="CELLS/L",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "serum_calcium_level",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "serum_calcium_level_units",
                    models.CharField(
                        blank=True,
                        choices=[("MG/DL", "mg/dL"), ("MMOL/L", "mmol/L")],
                        default="MG/DL",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "creatinine_clearance_rate",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "serum_creatinine_level",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "serum_creatinine_level_units",
                    models.CharField(
                        blank=True,
                        choices=[("MG/DL", "mg/dL"), ("UMOL/L", "μmol/L")],
                        default="MG/DL",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "hemoglobin_level",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "hemoglobin_level_units",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("G/DL", "g/dL"),
                            ("G/L", "g/L"),
                            ("MMOL/L", "mmol/L"),
                        ],
                        default="G/DL",
                        max_length=10,
                        null=True,
                    ),
                ),
                ("bone_lesions", models.TextField(blank=True, null=True)),
                ("meets_crab", models.BooleanField(blank=True, null=True)),
                (
                    "estimated_glomerular_filtration_rate",
                    models.IntegerField(blank=True, null=True),
                ),
                ("renal_adequacy_status", models.BooleanField(blank=True, null=True)),
                ("liver_enzyme_levels_ast", models.IntegerField(blank=True, null=True)),
                ("liver_enzyme_levels_alt", models.IntegerField(blank=True, null=True)),
                ("liver_enzyme_levels_alp", models.IntegerField(blank=True, null=True)),
                (
                    "serum_bilirubin_level_total",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "serum_bilirubin_level_total_units",
                    models.CharField(
                        blank=True,
                        choices=[("MG/DL", "mg/dL"), ("UMOL/L", "μmol/L")],
                        default="MG/DL",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "serum_bilirubin_level_direct",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "serum_bilirubin_level_direct_units",
                    models.CharField(
                        blank=True,
                        choices=[("MG/DL", "mg/dL"), ("UMOL/L", "μmol/L")],
                        default="MG/DL",
                        max_length=15,
                        null=True,
                    ),
                ),
                (
                    "albumin_level",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "albumin_level_units",
                    models.CharField(
                        blank=True,
                        choices=[("G/DL", "g/dL"), ("G/L", "g/L")],
                        default="G/DL",
                        max_length=15,
                        null=True,
                    ),
                ),
                ("kappa_flc", models.IntegerField(blank=True, null=True)),
                ("lambda_flc", models.IntegerField(blank=True, null=True)),
                ("meets_slim", models.BooleanField(blank=True, null=True)),
                ("liver_enzyme_levels", models.IntegerField(blank=True, null=True)),
                (
                    "serum_bilirubin_level",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "monoclonal_protein_serum",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "monoclonal_protein_urine",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "lactate_dehydrogenase_level",
                    models.IntegerField(blank=True, null=True),
                ),
                ("pulmonary_function_test_result", models.BooleanField(default=False)),
                ("bone_imaging_result", models.BooleanField(default=False)),
                ("clonal_plasma_cells", models.IntegerField(blank=True, null=True)),
                ("ejection_fraction", models.IntegerField(blank=True, null=True)),
                (
                    "consent_capability",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient have cognitive ability to consent?",
                    ),
                ),
                (
                    "caregiver_availability_status",
                    models.BooleanField(
                        default=False,
                        help_text="Is there an available caregiver for the patient?",
                    ),
                ),
                (
                    "contraceptive_use",
                    models.BooleanField(
                        default=False, help_text="Does the patient use contraceptives?"
                    ),
                ),
                (
                    "no_pregnancy_or_lactation_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient self assess as not pregnant or lactating?",
                    ),
                ),
                (
                    "pregnancy_test_result",
                    models.BooleanField(
                        default=False,
                        help_text="Does the female patient of childbearing age have a negative test result for pregnancy?",
                    ),
                ),
                (
                    "no_mental_health_disorder_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient have a mental health disorder?",
                    ),
                ),
                (
                    "no_concomitant_medication_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient have concomitant medication?",
                    ),
                ),
                (
                    "concomitant_medication_details",
                    models.CharField(
                        blank=True,
                        help_text="Details about the patient's concomitant medications",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "no_tobacco_use_status",
                    models.BooleanField(
                        default=True, help_text="Does the patient use tobacco?"
                    ),
                ),
                (
                    "tobacco_use_details",
                    models.CharField(
                        blank=True,
                        help_text="Details about the patient's tobacco use",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "no_substance_use_status",
                    models.BooleanField(
                        default=True, help_text="Does the patient use substances?"
                    ),
                ),
                (
                    "substance_use_details",
                    models.CharField(
                        blank=True,
                        help_text="Details about the patient's substance use",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "no_geographic_exposure_risk",
                    models.BooleanField(
                        default=True,
                        help_text="Has the patient had geographic exposure to risk?",
                    ),
                ),
                (
                    "geographic_exposure_risk_details",
                    models.CharField(
                        blank=True,
                        help_text="Details about the patient's geographic exposure risk",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "no_hiv_status",
                    models.BooleanField(
                        default=True, help_text="Does the patient has had HIV?"
                    ),
                ),
                (
                    "no_hepatitis_b_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient has had Hepatitis B (HBV)?",
                    ),
                ),
                (
                    "no_hepatitis_c_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient has had Hepatitis C (HCV)?",
                    ),
                ),
                (
                    "no_active_infection_status",
                    models.BooleanField(
                        default=True,
                        help_text="Does the patient has any active infection?",
                    ),
                ),
                ("concomitant_medications", models.TextField(blank=True, null=True)),
                (
                    "concomitant_medication_date",
                    models.DateField(blank=True, null=True),
                ),
                ("remission_duration_min", models.TextField(blank=True, null=True)),
                ("washout_period_duration", models.TextField(blank=True, null=True)),
                ("hiv_status", models.BooleanField(blank=True, null=True)),
                ("hepatitis_b_status", models.BooleanField(blank=True, null=True)),
                ("hepatitis_c_status", models.BooleanField(blank=True, null=True)),
                (
                    "last_treatment",
                    models.DateField(
                        blank=True,
                        help_text="Date and time of the last treatment",
                        null=True,
                    ),
                ),
                (
                    "bone_only_metastasis_status",
                    models.BooleanField(blank=True, null=True),
                ),
                ("menopausal_status", models.TextField(blank=True, null=True)),
                ("metastatic_status", models.BooleanField(blank=True, null=True)),
                ("toxicity_grade", models.IntegerField(blank=True, null=True)),
                ("planned_therapies", models.TextField(blank=True, null=True)),
                ("histologic_type", models.TextField(blank=True, null=True)),
                ("biopsy_grade_depr", models.TextField(blank=True, null=True)),
                ("biopsy_grade", models.IntegerField(blank=True, null=True)),
                (
                    "measurable_disease_by_recist_status",
                    models.BooleanField(blank=True, null=True),
                ),
                ("estrogen_receptor_status", models.TextField(blank=True, null=True)),
                (
                    "progesterone_receptor_status",
                    models.TextField(blank=True, null=True),
                ),
                ("her2_status", models.TextField(blank=True, null=True)),
                ("tnbc_status", models.BooleanField(blank=True, null=True)),
                ("hrd_status", models.TextField(blank=True, null=True)),
                ("hr_status", models.TextField(blank=True, null=True)),
                ("tumor_stage", models.TextField(blank=True, null=True)),
                ("nodes_stage", models.TextField(blank=True, null=True)),
                ("distant_metastasis_stage", models.TextField(blank=True, null=True)),
                ("staging_modalities", models.TextField(blank=True, null=True)),
                ("genetic_mutations", models.JSONField(blank=True, default=list)),
                ("pd_l1_tumor_cels", models.IntegerField(blank=True, null=True)),
                ("pd_l1_assay", models.TextField(blank=True, null=True)),
                ("pd_l1_ic_percentage", models.IntegerField(blank=True, null=True)),
                (
                    "pd_l1_combined_positive_score",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "ki67_proliferation_index",
                    models.IntegerField(blank=True, null=True),
                ),
                (
                    "person",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="patient_info",
                        to="omop_core.person",
                    ),
                ),
            ],
            options={
                "db_table": "patient_info",
                "indexes": [
                    models.Index(
                        fields=["person"], name="patient_inf_person__ea83ef_idx"
                    ),
                    models.Index(
                        fields=["patient_age"], name="patient_inf_patient_a5f152_idx"
                    ),
                    models.Index(
                        fields=["disease"], name="patient_inf_disease_15b4ff_idx"
                    ),
                    models.Index(fields=["stage"], name="patient_inf_stage_1f985e_idx"),
                ],
            },
        ),
    ]
